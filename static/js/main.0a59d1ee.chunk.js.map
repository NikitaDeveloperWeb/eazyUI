{"version":3,"sources":["components/Logo.tsx","components/Aside.tsx","components/PanelSetting.tsx","Layout/Layout.tsx","pages/AboutUs.tsx","pages/Components/index.tsx","components/ComponentDataGrid.tsx","EazyUI/Button.tsx","pages/Components/Content/Buttons.tsx","EazyUI/Container.tsx","pages/Components/Content/Containers.tsx","EazyUI/Field.tsx","pages/Components/Content/Fields.tsx","EazyUI/Form/BackForm.tsx","EazyUI/Form/LoginForm.tsx","pages/Components/Content/Forms.tsx","EazyUI/Menu.tsx","pages/Components/Content/Menus.tsx","EazyUI/Modal.tsx","pages/Components/Content/Modals.tsx","EazyUI/Select.tsx","pages/Components/Content/Selects.tsx","EazyUI/Slider.tsx","pages/Components/img/avatar.jpg","pages/Components/img/maxresdefault.jpg","pages/Components/img/shinobu.jpg","pages/Components/Content/Sliders.tsx","components/DocumentationBlock.tsx","pages/Documentation.tsx","components/Button.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["Logo","className","Aside","React","useState","open","setOpen","onClick","to","PanelSetting","href","Layout","navigation","children","panel","AboutUs","year","Date","getFullYear","toString","Components","title","ComponentDataGrid","component","API","name","props","map","comp","index","prop","description","Button","typeButtons","value","type","bgColor","bgColorHover","fontColor","fontColorHover","width","heigth","radius","border","ButtonPrimory","styled","button","height","background","color","borderRadius","cursor","transition","boxShadow","outline","outlineOffset","ButtonOutline","ButtonsArray","Buttons","cont","Container","backgroundColor","ContainerBlock","div","padding","ContainersArray","Containers","Field","JSXField","icon","placeholder","typeField","form","fieldRef","FieldPrymory","input","ref","FieldOutline","borderBottom","FieldIcon","display","flexDirection","justifyContent","alignItems","Icon","FieldsArray","Fields","BackForm","Form","Title","h2","LoginForm","FormArray","Menu","links","nav","minWidth","maxWidth","fontsize","link","path","MenusArray","Menus","Modal","content","handlerOpen","state","ButtonModal","position","zIndex","top","bottom","right","left","HeaderModal","HeaderTitle","ModalContent","Content","ModalsArray","Modals","Select","options","SelectView","OptionsDiv","borderLeft","borderRight","Options","opt","SelectsArray","Selects","Slider","photos","photo","setPhoto","SliderWrapper","Photo","Image","img","Pult","src","length","handlerPhotosNext","handlerPhotosPrew","SlidersArray","One","two","three","Sliders","DocumentationBlock","Documentation","Home","App","exact","Forms","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a59d1ee.chunk.js","sourcesContent":["import React from 'react';\r\ninterface LogoProps {\r\n  className: 'logo-pr' | 'logo-min';\r\n}\r\nfunction Logo({ className }: LogoProps) {\r\n  return (\r\n    <div className={className}>\r\n      <h1>EUI</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from './Logo';\r\n\r\nfunction Aside() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handlerOpen = (state: boolean) => {\r\n    setOpen(!state);\r\n  };\r\n\r\n  return (\r\n    <div className=\"aside\">\r\n      <div className=\"aside__logo\">\r\n        <Logo className=\"logo-min\" />\r\n        <p>v1.0</p>\r\n      </div>\r\n      <div className=\"aside__nav\">\r\n        <nav>\r\n          <h3\r\n            onClick={() => {\r\n              handlerOpen(open);\r\n            }}>\r\n            Компоненты\r\n          </h3>\r\n          <ul className={open ? 'open' : 'close'}>\r\n            <Link to=\"/components/conteiners\">Контейнеры</Link>\r\n            <Link to=\"/components/field\">Поля</Link>\r\n            <Link to=\"/components/buttons\">Кнопки</Link>\r\n            <Link to=\"/components/forms\">Формы</Link>\r\n            <Link to=\"/components/selects\">Список</Link>\r\n            <Link to=\"/components/modals\">Модальные окна</Link>\r\n            <Link to=\"/components/sliders\">Слайдер</Link>\r\n            <Link to=\"/components/menu\">Меню</Link>\r\n          </ul>\r\n          <Link to=\"/documentation\">Документация</Link>\r\n          <Link to=\"/aboutus\">О нас</Link>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Aside;\r\n","import React from 'react';\r\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n// import Brightness4Icon from '@material-ui/icons/Brightness4';\r\nfunction PanelSetting() {\r\n  return (\r\n    <div className=\"panelSetting\">\r\n      <Brightness5Icon />\r\n      <a href=\"https://github.com/NikitaDeveloperWeb/EazyUIComponents\">\r\n        <GitHubIcon />\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PanelSetting;\r\n","import React from 'react';\r\nimport Aside from '../components/Aside';\r\nimport PanelSetting from '../components/PanelSetting';\r\ninterface LayoutProps {\r\n  children?: JSX.Element | Element | JSX.Element[] | Element[];\r\n  navigation: boolean;\r\n  panel: boolean;\r\n}\r\n\r\nfunction Layout({ navigation, children, panel }: LayoutProps) {\r\n  return (\r\n    <div className=\"layout\">\r\n      {navigation && <Aside />}\r\n      <main>\r\n        {panel && (\r\n          <div className=\"layout__panel\">\r\n            <PanelSetting />\r\n          </div>\r\n        )}\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport Logo from '../components/Logo';\r\n\r\nfunction AboutUs() {\r\n  let year = new Date().getFullYear().toString();\r\n  return (\r\n    <div className=\"aboutUs\">\r\n      <h1>О нас</h1>\r\n      <h2>\r\n        Наша миссия - сделать создание пользовательского интерфейса с помощью React увлекательным.\r\n      </h2>\r\n      <p>\r\n        Наше приложение сосредоточено на том, чтобы сделать разработку пользовательских интерфейсов\r\n        на React проще, лучше и доступнее для большего числа людей. Мы создаем инструменты с\r\n        открытым исходным кодом.\r\n      </p>\r\n      <div className=\"aboutUs__logo\">\r\n        <Logo className=\"logo-pr\" />\r\n      </div>\r\n      <footer>\r\n        <strong>Eazy-UI</strong> - все права защищены {year}г.\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutUs;\r\n","import React from 'react';\r\ninterface ComponetsProps {\r\n  children?: JSX.Element | Element | JSX.Element[] | Element[];\r\n  title: string;\r\n}\r\nfunction Components({ title, children }: ComponetsProps) {\r\n  return (\r\n    <div className=\"components\">\r\n      <h1>{title}</h1>\r\n      <div className=\"components__preview\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Components;\r\n","import React from 'react';\r\n\r\ninterface ComponentDataGridProps {\r\n  component: JSX.Element | Element | JSX.Element[] | Element[];\r\n  API: string;\r\n  name: string;\r\n  props?: {\r\n    prop: string;\r\n    description: string;\r\n  }[];\r\n}\r\n\r\nfunction ComponentDataGrid({ component, API, name, props }: ComponentDataGridProps) {\r\n  return (\r\n    <div className=\"componentDataGrid\">\r\n      <div className=\"componentDataGrid__visual\">{component}</div>\r\n      <div className=\"componentDataGrid__data\">\r\n        <h2>{name}</h2>\r\n        <h3>API: {API}</h3>\r\n        <ul>\r\n          <h4>Props:</h4>\r\n          {props &&\r\n            props.map((comp, index) => (\r\n              <li key={`${comp}+${index}`}>\r\n                <strong>{comp.prop}</strong>\r\n                <p>{comp.description}</p>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComponentDataGrid;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\ninterface ButtonsProps {\r\n  typeButtons: 'primory' | 'outline';\r\n  value: string;\r\n  type: 'submit' | 'button' | 'reset';\r\n  bgColor?: string;\r\n\r\n  radius?: number | string;\r\n  fontColor?: string;\r\n  bgColorHover?: string;\r\n  borderColorHover?: string;\r\n  fontColorHover?: string;\r\n  width?: string | number;\r\n  heigth?: string | number;\r\n  border?: string;\r\n  onClick?: any;\r\n}\r\n\r\nfunction Button({\r\n  typeButtons,\r\n  value,\r\n  type,\r\n  bgColor,\r\n  bgColorHover,\r\n  fontColor,\r\n  fontColorHover,\r\n  width,\r\n  heigth,\r\n  onClick,\r\n  radius,\r\n  border,\r\n}: ButtonsProps) {\r\n  let Button;\r\n  if ((typeButtons = 'primory')) {\r\n    let ButtonPrimory = styled.button({\r\n      width: width,\r\n      height: heigth,\r\n      background: bgColor,\r\n      color: fontColor,\r\n      borderRadius: radius,\r\n      border: border,\r\n      cursor: 'pointer',\r\n      ':hover': {\r\n        transition: '0.7s',\r\n        background: bgColorHover,\r\n        boxShadow: '0 10px 22px rgba(0, 0, 0, 0.25), 0 5px 5px rgba(0, 0, 0, 0.22)',\r\n        color: fontColorHover,\r\n      },\r\n      ':active': {\r\n        outline: 0,\r\n        outlineOffset: 0,\r\n      },\r\n      ':focus': {\r\n        outline: 0,\r\n        outlineOffset: 0,\r\n      },\r\n    });\r\n    Button = (\r\n      <ButtonPrimory type={type} onClick={onClick}>\r\n        {value}\r\n      </ButtonPrimory>\r\n    );\r\n  } else {\r\n    let ButtonOutline = styled.button({\r\n      width: width,\r\n      height: heigth,\r\n      background: 'hsla(120,0%,0%,0)',\r\n      color: fontColor,\r\n      borderRadius: radius,\r\n      border: border,\r\n      cursor: 'pointer',\r\n      ':hover': {\r\n        transition: '0.7s',\r\n        background: bgColorHover,\r\n        boxShadow: '0 10px 22px rgba(0, 0, 0, 0.25), 0 5px 5px rgba(0, 0, 0, 0.22)',\r\n        color: fontColorHover,\r\n      },\r\n      ':active': {\r\n        outline: 0,\r\n        outlineOffset: 0,\r\n      },\r\n      ':focus': {\r\n        outline: 0,\r\n        outlineOffset: 0,\r\n      },\r\n    });\r\n    Button = (\r\n      <ButtonOutline type={type} onClick={onClick}>\r\n        {value}\r\n      </ButtonOutline>\r\n    );\r\n  }\r\n  return <>{Button}</>;\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport ComponentDataGrid from '../../../components/ComponentDataGrid';\r\nimport Button from '../../../EazyUI/Button';\r\nconst ButtonsArray = [\r\n  <ComponentDataGrid\r\n    component={\r\n      <Button\r\n        type=\"button\"\r\n        width={200}\r\n        heigth={30}\r\n        bgColor=\"#707ED7\"\r\n        bgColorHover=\"#4B5ED7\"\r\n        fontColor=\"#fff\"\r\n        radius=\"5px\"\r\n        typeButtons=\"primory\"\r\n        value=\"Кнопка\"\r\n        border=\"none\"\r\n      />\r\n    }\r\n    API=\"<Button type='primory'/>\"\r\n    name=\"Button\"\r\n    props={[\r\n      {\r\n        prop: 'type',\r\n        description: '- выбор типа кнопки(button,submit...).',\r\n      },\r\n      {\r\n        prop: 'width',\r\n        description: '- ширина кнопки.',\r\n      },\r\n      {\r\n        prop: 'heigth',\r\n        description: '- высота кнопки.',\r\n      },\r\n      {\r\n        prop: 'border',\r\n        description: '- бордюр элемента.',\r\n      },\r\n      {\r\n        prop: 'bgColor',\r\n        description: '- цвет фона.',\r\n      },\r\n      {\r\n        prop: 'bgColorHover',\r\n        description: '- цвет фона при наведении.',\r\n      },\r\n      {\r\n        prop: 'radius',\r\n        description: '- border-radius кнопки.',\r\n      },\r\n      {\r\n        prop: 'typeButtons',\r\n        description: '- тип стиля кнопки.',\r\n      },\r\n      {\r\n        prop: 'fontColor',\r\n        description: '- цвет текста кнопки.',\r\n      },\r\n      {\r\n        prop: 'value',\r\n        description: '- значение кнопки.',\r\n      },\r\n      {\r\n        prop: 'onClick',\r\n        description: '- фукция при нажатии на кнопку кнопки.',\r\n      },\r\n    ]}\r\n  />,\r\n  <ComponentDataGrid\r\n    component={\r\n      <Button\r\n        type=\"button\"\r\n        width={200}\r\n        heigth={30}\r\n        bgColorHover=\"#4B5ED7\"\r\n        fontColor=\"#4B5ED7\"\r\n        fontColorHover=\"#fff\"\r\n        border=\"1px solid #4B5ED7\"\r\n        radius=\"5px\"\r\n        typeButtons=\"outline\"\r\n        value=\"Кнопка\"\r\n      />\r\n    }\r\n    API=\"<Button type='outline'/>\"\r\n    name=\"Button\"\r\n    props={[\r\n      {\r\n        prop: 'type',\r\n        description: '- выбор типа кнопки(button,submit...).',\r\n      },\r\n      {\r\n        prop: 'width',\r\n        description: '- ширина кнопки.',\r\n      },\r\n      {\r\n        prop: 'heigth',\r\n        description: '- высота кнопки.',\r\n      },\r\n      {\r\n        prop: 'border',\r\n        description: '- бордюр элемента.',\r\n      },\r\n      {\r\n        prop: 'bgColor',\r\n        description: '- цвет фона.',\r\n      },\r\n      {\r\n        prop: 'bgColorHover',\r\n        description: '- цвет фона при наведении.',\r\n      },\r\n      {\r\n        prop: 'radius',\r\n        description: '- border-radius кнопки.',\r\n      },\r\n      {\r\n        prop: 'typeButtons',\r\n        description: '- тип стиля кнопки.',\r\n      },\r\n      {\r\n        prop: 'fontColor',\r\n        description: '- цвет текста кнопки.',\r\n      },\r\n      {\r\n        prop: 'fontColorHover',\r\n        description: '- цвет текста кнопки при наведении.',\r\n      },\r\n      {\r\n        prop: 'value',\r\n        description: '- значение кнопки.',\r\n      },\r\n      {\r\n        prop: 'onClick',\r\n        description: '- фукция при нажатии на кнопку кнопки.',\r\n      },\r\n    ]}\r\n  />,\r\n];\r\n\r\nfunction Buttons() {\r\n  return (\r\n    <div>\r\n      {ButtonsArray.map((cont, index) => (\r\n        <div>{cont}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\ninterface ContainerBlockProps {\r\n  children?: JSX.Element | Element | JSX.Element[] | Element[];\r\n  width?: string | number;\r\n  border?: 'none' | '1px solid rgba(0,0,0,0.5)';\r\n  backgroundColor?: string;\r\n  radius?: string | number;\r\n}\r\n\r\nfunction Container({ children, width, border, backgroundColor, radius }: ContainerBlockProps) {\r\n  let ContainerBlock = styled.div({\r\n    width: width,\r\n    border: border,\r\n    padding: 10,\r\n    background: backgroundColor,\r\n    borderRadius: radius,\r\n    height: 'auto',\r\n  });\r\n  return <ContainerBlock>{children}</ContainerBlock>;\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport ComponentDataGrid from '../../../components/ComponentDataGrid';\r\nimport Container from '../../../EazyUI/Container';\r\n\r\nconst ContainersArray = [\r\n  <ComponentDataGrid\r\n    component={\r\n      <Container\r\n        width={200}\r\n        backgroundColor=\"#fff\"\r\n        border=\"1px solid rgba(0,0,0,0.5)\"\r\n        radius=\"5px\"\r\n      />\r\n    }\r\n    API=\"<Container/>\"\r\n    name=\"Container\"\r\n    props={[\r\n      {\r\n        prop: 'width',\r\n        description: '- ширина контейнера.',\r\n      },\r\n      {\r\n        prop: 'children',\r\n        description: '- внутренний элемент контейнера.',\r\n      },\r\n      {\r\n        prop: 'border',\r\n        description: '- бордюр элемента.',\r\n      },\r\n      {\r\n        prop: 'backgroundColor',\r\n        description: '- цвет фона.',\r\n      },\r\n      {\r\n        prop: 'radius',\r\n        description: '- border-radius контейнера.',\r\n      },\r\n    ]}\r\n  />,\r\n];\r\n\r\nfunction Containers() {\r\n  return (\r\n    <div>\r\n      {ContainersArray.map((cont, index) => (\r\n        <div>{cont}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Containers;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\ninterface FieldProps {\r\n  type: 'primory' | 'outline' | 'icon';\r\n  width?: string | number;\r\n  heigth: string | number;\r\n  icon?: JSX.Element | Element | JSX.Element[] | Element[];\r\n  placeholder?: string;\r\n  typeField?: string;\r\n  form?: string;\r\n  name?: string;\r\n  bgColor?: string;\r\n  fieldRef?: any;\r\n  border?: string;\r\n  radius?: string;\r\n}\r\n\r\nfunction Field({\r\n  type,\r\n  width,\r\n  heigth,\r\n  icon,\r\n  placeholder,\r\n  typeField,\r\n  form,\r\n  name,\r\n  fieldRef,\r\n  bgColor,\r\n  border,\r\n  radius,\r\n}: FieldProps) {\r\n  let JSXField;\r\n  if (type === 'primory') {\r\n    let FieldPrymory = styled.input({\r\n      width: width,\r\n      height: heigth,\r\n      border: border,\r\n      background: bgColor,\r\n      borderRadius: radius,\r\n      padding: 10,\r\n      ':placeholder': {\r\n        color: '#ADB4BF',\r\n      },\r\n      ':focus': {\r\n        outline: 0,\r\n        outlineOffset: 0,\r\n        border: '1px solid #7CADEF',\r\n      },\r\n    });\r\n    JSXField = (\r\n      <FieldPrymory\r\n        placeholder={placeholder}\r\n        type={typeField}\r\n        name={name}\r\n        form={form}\r\n        ref={fieldRef}\r\n      />\r\n    );\r\n  } else if (type === 'outline') {\r\n    let FieldOutline = styled.input({\r\n      width: width,\r\n      height: heigth,\r\n      border: 'none',\r\n      borderBottom: border,\r\n      background: bgColor,\r\n      borderRadius: radius,\r\n      padding: 10,\r\n      ':placeholder': {\r\n        color: '#ADB4BF',\r\n      },\r\n      ':focus': {\r\n        outline: 0,\r\n        outlineOffset: 0,\r\n        borderBottom: '1px solid #7CADEF',\r\n      },\r\n    });\r\n    JSXField = (\r\n      <FieldOutline\r\n        placeholder={placeholder}\r\n        type={typeField}\r\n        name={name}\r\n        form={form}\r\n        ref={fieldRef}\r\n      />\r\n    );\r\n  } else {\r\n    let FieldIcon = styled.div({\r\n      height: '0 auto',\r\n      width: width,\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      background: bgColor,\r\n      border: border,\r\n      borderRadius: radius,\r\n      padding: 10,\r\n    });\r\n    let Icon = styled.div({\r\n      height: 'inherit',\r\n      width: '10%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    });\r\n    let Field = styled.input({\r\n      width: '80%',\r\n      border: 'none',\r\n      background: 'inherit',\r\n      ':focus': {\r\n        outline: 0,\r\n        outlineOffset: 0,\r\n      },\r\n    });\r\n\r\n    JSXField = (\r\n      <FieldIcon>\r\n        <Icon>{icon}</Icon>\r\n        <Field placeholder={placeholder} type={typeField} name={name} form={form} ref={fieldRef} />\r\n      </FieldIcon>\r\n    );\r\n  }\r\n  return <>{JSXField}</>;\r\n}\r\n\r\nexport default Field;\r\n","import React from 'react';\r\nimport ComponentDataGrid from '../../../components/ComponentDataGrid';\r\nimport Field from '../../../EazyUI/Field';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nconst FieldsArray = [\r\n  <ComponentDataGrid\r\n    component={\r\n      <Field\r\n        type=\"primory\"\r\n        width={200}\r\n        heigth={30}\r\n        bgColor=\"#fff\"\r\n        border=\"1px solid #ADB4BF\"\r\n        radius=\"5px\"\r\n        typeField=\"text\"\r\n        placeholder=\"Example\"\r\n        name=\"example\"\r\n      />\r\n    }\r\n    API=\"<Field type='primory'/>\"\r\n    name=\"Field\"\r\n    props={[\r\n      {\r\n        prop: 'type',\r\n        description: '- выбор типа поля.',\r\n      },\r\n      {\r\n        prop: 'width',\r\n        description: '- ширина поля.',\r\n      },\r\n      {\r\n        prop: 'heigth',\r\n        description: '- высота поля.',\r\n      },\r\n      {\r\n        prop: 'border',\r\n        description: '- бордюр элемента.',\r\n      },\r\n      {\r\n        prop: 'bgColor',\r\n        description: '- цвет фона.',\r\n      },\r\n      {\r\n        prop: 'radius',\r\n        description: '- border-radius поля.',\r\n      },\r\n      {\r\n        prop: 'typeField',\r\n        description: '- тип поля(text, password...).',\r\n      },\r\n      {\r\n        prop: 'name',\r\n        description: '- name атрибут поля.',\r\n      },\r\n      {\r\n        prop: 'placeholder',\r\n        description: '- placeholder поля.',\r\n      },\r\n    ]}\r\n  />,\r\n  <ComponentDataGrid\r\n    component={\r\n      <Field\r\n        type=\"outline\"\r\n        width={200}\r\n        heigth={30}\r\n        bgColor=\"#fff\"\r\n        border=\"1px solid #ADB4BF\"\r\n        typeField=\"text\"\r\n        placeholder=\"Example\"\r\n        name=\"example\"\r\n      />\r\n    }\r\n    API=\"<Field type='outline'/>\"\r\n    name=\"Field\"\r\n    props={[\r\n      {\r\n        prop: 'type',\r\n        description: '- выбор типа поля.',\r\n      },\r\n      {\r\n        prop: 'width',\r\n        description: '- ширина поля.',\r\n      },\r\n      {\r\n        prop: 'heigth',\r\n        description: '- высота поля.',\r\n      },\r\n      {\r\n        prop: 'border',\r\n        description: '- бордюр элемента.',\r\n      },\r\n      {\r\n        prop: 'bgColor',\r\n        description: '- цвет фона.',\r\n      },\r\n\r\n      {\r\n        prop: 'typeField',\r\n        description: '- тип поля(text, password...).',\r\n      },\r\n      {\r\n        prop: 'name',\r\n        description: '- name атрибут поля.',\r\n      },\r\n      {\r\n        prop: 'placeholder',\r\n        description: '- placeholder поля.',\r\n      },\r\n    ]}\r\n  />,\r\n  <ComponentDataGrid\r\n    component={\r\n      <Field\r\n        type=\"icon\"\r\n        icon={<AccountCircleIcon />}\r\n        width={200}\r\n        heigth={30}\r\n        bgColor=\"#fff\"\r\n        border=\"1px solid #ADB4BF\"\r\n        typeField=\"text\"\r\n        placeholder=\"Example\"\r\n        name=\"example\"\r\n        radius={'10px'}\r\n      />\r\n    }\r\n    API=\"<Field type='icon'/>\"\r\n    name=\"Field\"\r\n    props={[\r\n      {\r\n        prop: 'type',\r\n        description: '- выбор типа поля.',\r\n      },\r\n      {\r\n        prop: 'width',\r\n        description: '- ширина поля.',\r\n      },\r\n      {\r\n        prop: 'border',\r\n        description: '- бордюр элемента.',\r\n      },\r\n      {\r\n        prop: 'bgColor',\r\n        description: '- цвет фона.',\r\n      },\r\n\r\n      {\r\n        prop: 'typeField',\r\n        description: '- тип поля(text, password...).',\r\n      },\r\n      {\r\n        prop: 'name',\r\n        description: '- name атрибут поля.',\r\n      },\r\n      {\r\n        prop: 'placeholder',\r\n        description: '- placeholder поля.',\r\n      },\r\n      {\r\n        prop: 'icon',\r\n        description: '- иконка поля(SVG).',\r\n      },\r\n    ]}\r\n  />,\r\n];\r\n\r\nfunction Fields() {\r\n  return (\r\n    <div>\r\n      {FieldsArray.map((cont, index) => (\r\n        <div>{cont}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Fields;\r\n","import React from 'react';\r\nimport Field from '../Field';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Button from '../Button';\r\nimport styled from '@emotion/styled';\r\n\r\nfunction BackForm() {\r\n  let Form = styled.form({\r\n    width: 300,\r\n    height: 200,\r\n    padding: 10,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    background: 'inherit',\r\n  });\r\n  let Title = styled.h2({\r\n    background: 'inherit',\r\n  });\r\n  return (\r\n    <Form>\r\n      <Title>Feedback</Title>\r\n      <Field\r\n        type=\"outline\"\r\n        width={200}\r\n        heigth={30}\r\n        bgColor=\"#fff\"\r\n        border=\"1px solid #BBBBBB\"\r\n        placeholder=\"E-mail\"\r\n        typeField=\"text\"\r\n      />\r\n      <Field\r\n        type=\"outline\"\r\n        icon={<AccountCircleIcon />}\r\n        width={200}\r\n        heigth={30}\r\n        bgColor=\"#fff\"\r\n        border=\"1px solid #BBBBBB\"\r\n        placeholder=\"Treatment\"\r\n        typeField=\"text\"\r\n      />\r\n      <Button\r\n        type=\"button\"\r\n        width={200}\r\n        heigth={30}\r\n        bgColorHover=\"#4B5ED7\"\r\n        fontColor=\"#fff\"\r\n        fontColorHover=\"#fff\"\r\n        border=\"1px solid #707ED7\"\r\n        radius=\"5px\"\r\n        typeButtons=\"primory\"\r\n        value=\"Submit\"\r\n        bgColor=\"#707ED7\"\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default BackForm;\r\n","import React from 'react';\r\nimport Field from '../Field';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Button from '../Button';\r\nimport styled from '@emotion/styled';\r\nfunction LoginForm() {\r\n  let Form = styled.form({\r\n    width: 300,\r\n    height: 200,\r\n    padding: 10,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    background: 'inherit',\r\n  });\r\n  let Title = styled.h2({\r\n    background: 'inherit',\r\n  });\r\n  return (\r\n    <Form>\r\n      <Title>Login</Title>\r\n      <Field\r\n        type=\"icon\"\r\n        icon={<AccountCircleIcon />}\r\n        width={200}\r\n        heigth={30}\r\n        bgColor=\"#fff\"\r\n        border=\"1px solid #BBBBBB\"\r\n        radius=\"10px\"\r\n        placeholder=\"E-mail\"\r\n        typeField=\"text\"\r\n      />\r\n      <Field\r\n        type=\"icon\"\r\n        icon={<AccountCircleIcon />}\r\n        width={200}\r\n        heigth={30}\r\n        bgColor=\"#fff\"\r\n        border=\"1px solid #BBBBBB\"\r\n        radius=\"10px\"\r\n        placeholder=\"Password\"\r\n        typeField=\"password\"\r\n      />\r\n      <Button\r\n        type=\"button\"\r\n        width={200}\r\n        heigth={30}\r\n        bgColorHover=\"#4B5ED7\"\r\n        fontColor=\"#BBBBBB\"\r\n        fontColorHover=\"#fff\"\r\n        border=\"1px solid #BBBBBB\"\r\n        radius=\"5px\"\r\n        typeButtons=\"outline\"\r\n        value=\"Sign in\"\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport ComponentDataGrid from '../../../components/ComponentDataGrid';\r\nimport BackForm from '../../../EazyUI/Form/BackForm';\r\nimport LoginForm from '../../../EazyUI/Form/LoginForm';\r\n\r\nconst FormArray = [\r\n  <ComponentDataGrid component={<LoginForm />} API=\"<LoginForm/>\" name=\"Form for login\" />,\r\n  <ComponentDataGrid component={<BackForm />} API=\"<BackForm/>\" name=\"Form for feedback\" />,\r\n];\r\n\r\nfunction Form() {\r\n  return (\r\n    <div>\r\n      {FormArray.map((cont, index) => (\r\n        <div>{cont}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface MenuProps {\r\n  links: {\r\n    title: string;\r\n    path: string;\r\n  }[];\r\n}\r\n\r\nfunction Menu({ links }: MenuProps) {\r\n  let Menu = styled.nav({\r\n    minWidth: 300,\r\n    maxWidth: 600,\r\n    height: '0 auto',\r\n    padding: 10,\r\n    fontsize: 25,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n    border: '1px solid #AFACB2',\r\n    background: 'inherit',\r\n  });\r\n\r\n  return (\r\n    <Menu className=\"menu\">\r\n      {links &&\r\n        // eslint-disable-next-line array-callback-return\r\n        links.map((link, index) => (\r\n          <Link to={link.path} key={`${link}+${index}`}>\r\n            {link.title}\r\n          </Link>\r\n        ))}\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport ComponentDataGrid from '../../../components/ComponentDataGrid';\r\nimport Menu from '../../../EazyUI/Menu';\r\n\r\nconst MenusArray = [\r\n  <ComponentDataGrid\r\n    component={\r\n      <Menu\r\n        links={[\r\n          { title: 'one', path: '#' },\r\n          { title: 'two', path: '#' },\r\n          { title: 'three', path: '#' },\r\n        ]}\r\n      />\r\n    }\r\n    API=\"<Menu/>\"\r\n    name=\"Menu\"\r\n    props={[\r\n      {\r\n        prop: 'links',\r\n        description: '- список ссылок для навигации.',\r\n      },\r\n    ]}\r\n  />,\r\n];\r\n\r\nfunction Menus() {\r\n  return (\r\n    <div>\r\n      {MenusArray.map((cont, index) => (\r\n        <div>{cont}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menus;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Button from './Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\ninterface ModalProps {\r\n  title?: string;\r\n  content?: JSX.Element | Element | JSX.Element[] | Element[];\r\n}\r\n\r\nfunction Modal({ title, content }: ModalProps) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handlerOpen = (state: boolean) => {\r\n    setOpen(!state);\r\n  };\r\n\r\n  let ButtonModal = styled.div({});\r\n  let Modal = styled.div({\r\n    position: 'absolute',\r\n    zIndex: 10000,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    background: 'rgba(0,0,0,0.5)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  });\r\n  let HeaderModal = styled.div({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  });\r\n  let HeaderTitle = styled.h2({ display: 'flex', flexDirection: 'row' });\r\n  let ModalContent = styled.div({\r\n    width: 400,\r\n    height: '0 auto',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n  });\r\n  let Content = styled.div({\r\n    width: '100%',\r\n    height: '0 auto',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  });\r\n  return (\r\n    <div>\r\n      <ButtonModal>\r\n        <Button\r\n          type=\"button\"\r\n          width={200}\r\n          heigth={30}\r\n          bgColor=\"#707ED7\"\r\n          bgColorHover=\"#4B5ED7\"\r\n          fontColor=\"#fff\"\r\n          radius=\"5px\"\r\n          typeButtons=\"primory\"\r\n          value=\"Открыть\"\r\n          border=\"none\"\r\n          onClick={() => {\r\n            handlerOpen(open);\r\n          }}\r\n        />\r\n      </ButtonModal>\r\n      {open && (\r\n        <Modal>\r\n          <ModalContent>\r\n            <HeaderModal>\r\n              <HeaderTitle>{title}</HeaderTitle>\r\n              <CloseIcon\r\n                onClick={() => {\r\n                  handlerOpen(open);\r\n                }}\r\n              />\r\n            </HeaderModal>\r\n            <Content>{content}</Content>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport ComponentDataGrid from '../../../components/ComponentDataGrid';\r\nimport Modal from '../../../EazyUI/Modal';\r\n\r\nconst ModalsArray = [\r\n  <ComponentDataGrid\r\n    component={<Modal title=\"Modal window\" content={<div>Content</div>} />}\r\n    API=\"<Modal/>\"\r\n    name=\"Modal window\"\r\n    props={[\r\n      {\r\n        prop: 'title',\r\n        description: '- заголовок модального окна.',\r\n      },\r\n      {\r\n        prop: 'content',\r\n        description: '- содержимое модального окна.',\r\n      },\r\n    ]}\r\n  />,\r\n];\r\n\r\nfunction Modals() {\r\n  return (\r\n    <div>\r\n      {ModalsArray.map((cont, index) => (\r\n        <div>{cont}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modals;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport './normalize.css';\r\ninterface SelectProps {\r\n  placeholder: string;\r\n  options: string[];\r\n  width?: string | number;\r\n  height?: string | number;\r\n  bgColor?: string;\r\n  border?: string;\r\n  radius?: string;\r\n  bgColorHover?: string;\r\n}\r\n\r\nfunction Select({\r\n  placeholder,\r\n  options,\r\n  width,\r\n  height,\r\n  bgColor,\r\n  border,\r\n  radius,\r\n  bgColorHover,\r\n}: SelectProps) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handlerOpen = (state: boolean) => {\r\n    setOpen(!state);\r\n  };\r\n\r\n  let Select = styled.div({\r\n    width: width,\r\n    height: height,\r\n    background: bgColor,\r\n    // border: border,\r\n    borderRadius: radius,\r\n  });\r\n  let SelectView = styled.div({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    background: 'inherit',\r\n    border: border,\r\n    borderRadius: radius,\r\n    cursor: 'pointer',\r\n  });\r\n  let OptionsDiv = styled.div({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: 5,\r\n    background: 'inherit',\r\n    borderRadius: radius,\r\n    borderLeft: border,\r\n    borderRight: border,\r\n    borderBottom: border,\r\n  });\r\n  let Options = styled.div({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 5,\r\n    background: 'inherit',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: bgColorHover,\r\n    },\r\n  });\r\n  return (\r\n    <Select>\r\n      <SelectView onClick={() => handlerOpen(open)}>\r\n        {placeholder}\r\n        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n      </SelectView>\r\n      {open && (\r\n        <OptionsDiv>\r\n          {options.map((opt, index) => (\r\n            <Options key={`opt ${index}+ ${opt}`}>{opt}</Options>\r\n          ))}\r\n        </OptionsDiv>\r\n      )}\r\n    </Select>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport ComponentDataGrid from '../../../components/ComponentDataGrid';\r\nimport Select from '../../../EazyUI/Select';\r\n\r\nconst SelectsArray = [\r\n  <ComponentDataGrid\r\n    component={\r\n      <Select\r\n        placeholder=\"Выбирите\"\r\n        options={['один', 'два', 'три']}\r\n        width={200}\r\n        height={40}\r\n        bgColor=\"#fff\"\r\n        border=\"1px solid #BBBBBB\"\r\n        radius=\"5px\"\r\n        bgColorHover=\"#9EB4E1\"\r\n      />\r\n    }\r\n    API=\"<Select/>\"\r\n    name=\"Select\"\r\n    props={[\r\n      {\r\n        prop: 'placeholder',\r\n        description: '- placeholder списка.',\r\n      },\r\n      {\r\n        prop: 'options',\r\n        description: '- элементы списка.',\r\n      },\r\n      {\r\n        prop: 'width',\r\n        description: '- ширина списка.',\r\n      },\r\n      {\r\n        prop: 'heigth',\r\n        description: '- высота списка.',\r\n      },\r\n      {\r\n        prop: 'bgColor',\r\n        description: '- фон списка.',\r\n      },\r\n      {\r\n        prop: 'border',\r\n        description: '- бордюр списка.',\r\n      },\r\n      {\r\n        prop: 'radius',\r\n        description: '- border-radius списка.',\r\n      },\r\n      {\r\n        prop: 'bgColorHover',\r\n        description: '- фон элемента списка при наведении.',\r\n      },\r\n    ]}\r\n  />,\r\n];\r\n\r\nfunction Selects() {\r\n  return (\r\n    <div>\r\n      {SelectsArray.map((cont, index) => (\r\n        <div>{cont}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Selects;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\ninterface SliderProps {\r\n  photos: string[];\r\n}\r\n\r\nfunction Slider({ photos }: SliderProps) {\r\n  const [photo, setPhoto] = React.useState(0);\r\n\r\n  const handlerPhotosNext = (photo: number) => {\r\n    photo++;\r\n    if (photo < photos.length) {\r\n      setPhoto(photo);\r\n    } else {\r\n      photo = 0;\r\n      setPhoto(photo);\r\n    }\r\n  };\r\n  const handlerPhotosPrew = (photo: number) => {\r\n    photo--;\r\n    if (photo >= 0) {\r\n      setPhoto(photo);\r\n    } else {\r\n      photo = photos.length - 1;\r\n      setPhoto(photo);\r\n    }\r\n  };\r\n\r\n  let SliderWrapper = styled.div({\r\n    width: 500,\r\n    height: 400,\r\n    padding: 10,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    border: '1px solid #E7E7EE',\r\n    borderRadius: 10,\r\n  });\r\n  let Photo = styled.div({ width: '100%', heigth: '100%' });\r\n  let Image = styled.img({\r\n    width: '100%',\r\n    heigth: '100%',\r\n  });\r\n  let Pult = styled.div({\r\n    width: '100%',\r\n    height: 50,\r\n    padding: 5,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  });\r\n  return (\r\n    <SliderWrapper>\r\n      <Photo>\r\n        <Image src={photos[photo]} />\r\n      </Photo>\r\n      <Pult className=\"pult\">\r\n        <SkipPreviousIcon onClick={() => handlerPhotosNext(photo)} />\r\n        <SkipNextIcon onClick={() => handlerPhotosPrew(photo)} />\r\n      </Pult>\r\n    </SliderWrapper>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","export default __webpack_public_path__ + \"static/media/avatar.1fc1a63a.jpg\";","export default __webpack_public_path__ + \"static/media/maxresdefault.65cba8bc.jpg\";","export default __webpack_public_path__ + \"static/media/shinobu.e7a88f82.jpg\";","import React from 'react';\r\nimport ComponentDataGrid from '../../../components/ComponentDataGrid';\r\nimport Slider from '../../../EazyUI/Slider';\r\nimport One from '../img/avatar.jpg';\r\nimport two from '../img/maxresdefault.jpg';\r\nimport three from '../img/shinobu.jpg';\r\nconst SlidersArray = [\r\n  <ComponentDataGrid\r\n    component={<Slider photos={[One, two, three]} />}\r\n    API=\"<Slider/>\"\r\n    name=\"Slider\"\r\n    props={[\r\n      {\r\n        prop: 'photos',\r\n        description: '- фотографии для слайдера.',\r\n      },\r\n    ]}\r\n  />,\r\n];\r\n\r\nfunction Sliders() {\r\n  return (\r\n    <div>\r\n      {SlidersArray.map((cont, index) => (\r\n        <div>{cont}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sliders;\r\n","import React from 'react';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\ninterface DocumetationBlockProps {\r\n  title: string;\r\n  description: string;\r\n}\r\nfunction DocumentationBlock({ title, description }: DocumetationBlockProps) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handlerOpen = (state: boolean) => {\r\n    setOpen(!state);\r\n  };\r\n\r\n  return (\r\n    <div className=\"documentation__block\">\r\n      <h2\r\n        onClick={() => {\r\n          handlerOpen(open);\r\n        }}>\r\n        {title} {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n      </h2>\r\n      <div className={open ? 'documentation__block__description' : 'close'}>\r\n        <p>{description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DocumentationBlock;\r\n","import React from 'react';\r\nimport DocumentationBlock from '../components/DocumentationBlock';\r\n\r\nfunction Documentation() {\r\n  return (\r\n    <div className=\"documentation\">\r\n      <h1>Документация</h1>\r\n      <p className=\"documentation__info\">\r\n        Для начала работы скачайте репозиторий в ваш проект\r\n        <strong>\r\n          <a href=\"https://github.com/NikitaDeveloperWeb/EazyUIComponents\"> здесь.</a>\r\n        </strong>\r\n      </p>\r\n      <p className=\"documentation__info\">\r\n        Или сколнируйте с помощью команды\r\n        <div className=\"documentation__info__comands\">\r\n          git clone https://github.com/NikitaDeveloperWeb/EazyUIComponents\r\n        </div>\r\n      </p>\r\n      <p className=\"documentation__info\">Импортируйте необходимый вам компонент в ваш проект.</p>\r\n      <p className=\"documentation__info\">\r\n        Версии технологий используемые для этого проекта:\r\n        <br />\r\n        <br />\r\n        <div className=\"documentation__info__comands\">\"react\":\"^17.0.1\"</div>\r\n        <br />\r\n        <div className=\"documentation__info__comands\">\"typescript\":\"^4.1.2\"</div>\r\n        <br />\r\n        <div className=\"documentation__info__comands\">\"@emotion/react\":\"^11.1.5\"</div>\r\n        <br />\r\n        <div className=\"documentation__info__comands\">\"@emotion/styled\":\"^11.1.5\"</div>\r\n        <br />\r\n        <div className=\"documentation__info__comands\">\"@material-ui/core\":\"^4.11.3\"</div>\r\n        <br />\r\n        <div className=\"documentation__info__comands\">\"@material-ui/icons\":\"^4.11.2\"</div>\r\n        <br />\r\n      </p>\r\n      <div className=\"documentation__line\"></div>\r\n      <DocumentationBlock\r\n        title=\"Контейнеры\"\r\n        description=\" Контейнеры центрирует содержимое по горизонтали. Это базовый элемент всех макетов. Несмотря\r\n          на то, что контейнеры могут быть вложенными, большинство макетов не требуют вложенного\r\n          контейнера.\"\r\n      />\r\n      <div className=\"documentation__line\"></div>\r\n      <DocumentationBlock\r\n        title=\"Поля\"\r\n        description=\" Текстовые поля позволяют пользователям вводить текст в интерфейсе. Обычно они появляются в формах и диалогах. Поля представляют собой полноценный элемент управления формы, включая метку (label), само поле ввода и вспомогательный текст.\"\r\n      />\r\n      <div className=\"documentation__line\"></div>\r\n      <DocumentationBlock\r\n        title=\"Кнопки\"\r\n        description=\"Кнопки позволяют пользователям выполнять действия и делать выбор одним нажатием. Кнопки обозначают действия, которые могут выполнять пользователи. Они используются в таких местах пользовательского интерфейса, как:\r\n        диалоги,\r\n        всплывающие окно,\r\n        формы,\r\n        карточки,\r\n        панели инструментов.\"\r\n      />\r\n      <div className=\"documentation__line\"></div>\r\n      <DocumentationBlock\r\n        title=\"Формы\"\r\n        description=\"Формы являются одним из важных элементов любого сайта и предназначены для обмена данными между пользователем и сервером. Область применения форм не ограничена отправкой данных на сервер, с помощью клиентских скриптов можно получить доступ к любому элементу формы, изменять его и применять по своему усмотрению.\"\r\n      />\r\n      <div className=\"documentation__line\"></div>\r\n      <DocumentationBlock\r\n        title=\"Список\"\r\n        description=\"Компонент список используются для сбора информации, предоставленной пользователем, из списка параметров.Меню располагаются над вызвавшими их элементами таким образом, чтобы элемент меню, выбранный в данный момент, перекрывал вызывающий элемент.\"\r\n      />\r\n      <div className=\"documentation__line\"></div>\r\n      <DocumentationBlock\r\n        title=\"Модальные окна\"\r\n        description=\"Модальный компонент обеспечивает прочную основу для создания диалогов, всплывающих окон, лайтбоксов и всего остального.\"\r\n      />\r\n      <div className=\"documentation__line\"></div>\r\n      <DocumentationBlock\r\n        title=\"Слайдер\"\r\n        description=\"Это специальный элемент веб-дизайна, представляющий собой блок определенной ширины чаще всего в шапке веб-страницы. Главная его фишка в изменяющихся в ручном или автоматическом режиме элементах – картинок, текстов и ссылок. Популярность слайдеры приобрели с распространением javascript-фреймворков.\"\r\n      />\r\n      <div className=\"documentation__line\"></div>\r\n      <DocumentationBlock\r\n        title=\"Меню\"\r\n        description=\"Меню временно отображают список вариантов.Меню отображает список выбранного на временной поверхности. Оно появляется когда пользователь взаимодействует с кнопкой или другим элементом управления.Простые меню по умолчанию открываются над якорным элементом (это поведение можно изменить с помощью props). Находясь вблизи края экрана, простое меню располагается таким образом, чтобы все элементы меню были полностью видны.Выбор варианта должен в идеале немедленно зафиксировать его и закрыть меню.Неточности: В отличии от простых меню, простые диалоги могут содержать дополнительную информацию относительно опций, доступных для элемента списка или предоставлять навигационные или ортогональные действия, относящиеся к главной задаче. Хотя они могут отображать один и тот же контент, простые меню более предпочтительны в отличии от простых диалогов, потому что они создают меньше препятствий текущему контексту пользователя.\"\r\n      />\r\n      <div className=\"documentation__line\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Documentation;\r\n","import React from 'react';\r\n\r\ninterface ButtonProps {\r\n  value: string | undefined;\r\n  type: 'button' | 'submit' | 'reset' | undefined;\r\n  form?: string;\r\n  className?: 'button__primary' | 'button__outline';\r\n}\r\n\r\nconst Button = ({ value, type, form, className }: ButtonProps) => {\r\n  return (\r\n    <button type={type} form={form} className={className}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../components/Button';\r\n\r\nimport Logo from '../components/Logo';\r\nimport PanelSetting from '../components/PanelSetting';\r\n\r\nfunction Home() {\r\n  let year = new Date().getFullYear().toString();\r\n  return (\r\n    <div className=\"home\">\r\n      <PanelSetting />\r\n      <div className=\"home__intro\">\r\n        <div className=\"home__intro__logo\">\r\n          <Logo className=\"logo-pr\" />\r\n        </div>\r\n        <div className=\"home__intro__preview\">\r\n          <h1>EAZY-UI</h1>\r\n          <p>\r\n            React компоненты для быстрой и легкой веб-разработки.\r\n            <br /> Создайте свой собственный дизайн или начните с <strong>Eazy-UI</strong>.\r\n          </p>\r\n\r\n          <Link to=\"/documentation\">\r\n            <Button value=\"Начать\" className=\"button__primary\" type=\"button\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <footer>\r\n        <strong>Eazy-UI</strong> - все права защищены {year}г.\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Layout from './Layout/Layout';\nimport AboutUs from './pages/AboutUs';\nimport Components from './pages/Components';\nimport Buttons from './pages/Components/Content/Buttons';\nimport Containers from './pages/Components/Content/Containers';\nimport Fields from './pages/Components/Content/Fields';\nimport Forms from './pages/Components/Content/Forms';\nimport Menus from './pages/Components/Content/Menus';\nimport Modals from './pages/Components/Content/Modals';\nimport Selects from './pages/Components/Content/Selects';\nimport Sliders from './pages/Components/Content/Sliders';\nimport Documentation from './pages/Documentation';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route exact path=\"\">\n          <Layout navigation={false} children={<Home />} panel={false} />\n        </Route>\n        <Route path=\"/documentation\">\n          <Layout navigation={true} children={<Documentation />} panel={true} />\n        </Route>\n        <Route exact path=\"/aboutus\">\n          <Layout navigation={true} children={<AboutUs />} panel={true} />\n        </Route>\n        <Route exact path=\"/components/conteiners\">\n          <Layout\n            navigation={true}\n            children={<Components title=\"Контейнеры\" children={<Containers />} />}\n            panel={true}\n          />\n        </Route>\n        <Route exact path=\"/components/field\">\n          <Layout\n            navigation={true}\n            children={<Components title=\"Поля\" children={<Fields />} />}\n            panel={true}\n          />\n        </Route>\n        <Route exact path=\"/components/buttons\">\n          <Layout\n            navigation={true}\n            children={<Components title=\"Кнопки\" children={<Buttons />} />}\n            panel={true}\n          />\n        </Route>\n        <Route exact path=\"/components/forms\">\n          <Layout\n            navigation={true}\n            children={<Components title=\"Формы\" children={<Forms />} />}\n            panel={true}\n          />\n        </Route>\n        <Route exact path=\"/components/selects\">\n          <Layout\n            navigation={true}\n            children={<Components title=\"Списки\" children={<Selects />} />}\n            panel={true}\n          />\n        </Route>\n        <Route exact path=\"/components/modals\">\n          <Layout\n            navigation={true}\n            children={<Components title=\"Модальные окна\" children={<Modals />} />}\n            panel={true}\n          />\n        </Route>\n        <Route exact path=\"/components/sliders\">\n          <Layout\n            navigation={true}\n            children={<Components title=\"Слайдеры\" children={<Sliders />} />}\n            panel={true}\n          />\n        </Route>\n        <Route exact path=\"/components/menu\">\n          <Layout\n            navigation={true}\n            children={<Components title=\"Меню\" children={<Menus />} />}\n            panel={true}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './scss/main.scss';\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}